// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
// Version: 2021.1.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cordiccart2pol_cordiccart2pol,hls_ip_2021_1_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.238000,HLS_SYN_LAT=30,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1201,HLS_SYN_LUT=3812,HLS_VERSION=2021_1_1}" *)

module cordiccart2pol (
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_pp0_stage0 = 15'd64;
parameter    ap_ST_fsm_state9 = 15'd128;
parameter    ap_ST_fsm_state10 = 15'd256;
parameter    ap_ST_fsm_state11 = 15'd512;
parameter    ap_ST_fsm_state12 = 15'd1024;
parameter    ap_ST_fsm_state13 = 15'd2048;
parameter    ap_ST_fsm_state14 = 15'd4096;
parameter    ap_ST_fsm_state15 = 15'd8192;
parameter    ap_ST_fsm_state16 = 15'd16384;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] x;
wire   [31:0] y;
wire   [31:0] r;
reg    r_ap_vld;
wire   [31:0] theta;
reg    theta_ap_vld;
wire   [3:0] angles_V_address0;
reg    angles_V_ce0;
wire   [12:0] angles_V_q0;
reg   [31:0] y_read_reg_1598;
reg   [31:0] x_read_reg_1604;
reg   [0:0] p_Result_17_reg_1610;
wire    ap_CS_fsm_state2;
reg   [10:0] exp_tmp_reg_1615;
wire   [51:0] trunc_ln574_fu_282_p1;
reg   [51:0] trunc_ln574_reg_1620;
wire   [0:0] icmp_ln580_fu_286_p2;
reg   [0:0] icmp_ln580_reg_1625;
reg   [0:0] p_Result_19_reg_1632;
reg   [10:0] exp_tmp_1_reg_1637;
wire   [51:0] trunc_ln574_1_fu_318_p1;
reg   [51:0] trunc_ln574_1_reg_1642;
wire   [0:0] icmp_ln580_1_fu_322_p2;
reg   [0:0] icmp_ln580_1_reg_1647;
wire   [53:0] man_V_2_fu_348_p3;
reg   [53:0] man_V_2_reg_1654;
wire    ap_CS_fsm_state3;
wire  signed [11:0] sh_amt_fu_379_p3;
reg  signed [11:0] sh_amt_reg_1659;
wire   [16:0] trunc_ln592_fu_393_p1;
reg   [16:0] trunc_ln592_reg_1664;
wire   [0:0] icmp_ln594_fu_397_p2;
reg   [0:0] icmp_ln594_reg_1669;
wire   [0:0] and_ln590_fu_458_p2;
reg   [0:0] and_ln590_reg_1674;
wire   [16:0] select_ln594_fu_476_p3;
reg   [16:0] select_ln594_reg_1679;
wire   [0:0] and_ln612_fu_496_p2;
reg   [0:0] and_ln612_reg_1684;
wire   [53:0] man_V_5_fu_522_p3;
reg   [53:0] man_V_5_reg_1689;
wire  signed [11:0] sh_amt_1_fu_553_p3;
reg  signed [11:0] sh_amt_1_reg_1694;
wire   [16:0] trunc_ln592_1_fu_567_p1;
reg   [16:0] trunc_ln592_1_reg_1699;
wire   [0:0] icmp_ln594_1_fu_571_p2;
reg   [0:0] icmp_ln594_1_reg_1704;
wire   [0:0] and_ln590_1_fu_632_p2;
reg   [0:0] and_ln590_1_reg_1709;
wire   [16:0] select_ln594_2_fu_650_p3;
reg   [16:0] select_ln594_2_reg_1714;
wire   [0:0] and_ln612_1_fu_670_p2;
reg   [0:0] and_ln612_1_reg_1719;
wire  signed [31:0] sext_ln590_fu_676_p1;
reg  signed [31:0] sext_ln590_reg_1724;
wire    ap_CS_fsm_state4;
wire   [16:0] select_ln594_1_fu_696_p3;
reg   [16:0] select_ln594_1_reg_1729;
wire  signed [31:0] sext_ln590_1_fu_703_p1;
reg  signed [31:0] sext_ln590_1_reg_1734;
wire   [16:0] select_ln594_3_fu_723_p3;
reg   [16:0] select_ln594_3_reg_1739;
wire   [16:0] y_i_V_8_fu_808_p3;
reg   [16:0] y_i_V_8_reg_1744;
wire    ap_CS_fsm_state5;
wire   [16:0] x_i_V_2_fu_816_p3;
reg   [16:0] x_i_V_2_reg_1749;
wire   [0:0] icmp_ln1547_fu_860_p2;
reg   [0:0] icmp_ln1547_reg_1757;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state7_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1057_fu_840_p2;
wire   [16:0] x_i_V_5_fu_910_p3;
reg   [16:0] x_i_V_5_reg_1767;
wire   [16:0] y_i_V_11_fu_918_p3;
reg   [16:0] y_i_V_11_reg_1772;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln988_fu_974_p2;
reg   [0:0] icmp_ln988_reg_1782;
wire    ap_CS_fsm_state12;
wire   [0:0] p_Result_21_fu_979_p3;
reg   [0:0] p_Result_21_reg_1787;
wire   [29:0] tmp_V_4_fu_992_p3;
reg   [29:0] tmp_V_4_reg_1792;
wire  signed [33:0] sext_ln990_fu_1000_p1;
reg  signed [33:0] sext_ln990_reg_1797;
wire    ap_CS_fsm_state13;
wire   [31:0] sub_ln997_fu_1033_p2;
reg   [31:0] sub_ln997_reg_1804;
wire   [31:0] lsb_index_fu_1039_p2;
reg   [31:0] lsb_index_reg_1810;
reg   [30:0] tmp_10_reg_1817;
wire   [5:0] trunc_ln1000_fu_1055_p1;
reg   [5:0] trunc_ln1000_reg_1822;
wire   [0:0] p_Result_23_fu_1059_p3;
reg   [0:0] p_Result_23_reg_1827;
wire   [7:0] trunc_ln996_fu_1067_p1;
reg   [7:0] trunc_ln996_reg_1833;
wire   [0:0] icmp_ln988_1_fu_1071_p2;
reg   [0:0] icmp_ln988_1_reg_1838;
wire   [0:0] p_Result_25_fu_1077_p3;
reg   [0:0] p_Result_25_reg_1843;
wire   [16:0] tmp_V_5_fu_1091_p3;
reg   [16:0] tmp_V_5_reg_1848;
wire   [31:0] sub_ln997_1_fu_1125_p2;
reg   [31:0] sub_ln997_1_reg_1855;
wire   [16:0] trunc_ln997_fu_1131_p1;
reg   [16:0] trunc_ln997_reg_1862;
wire   [4:0] trunc_ln1000_1_fu_1135_p1;
reg   [4:0] trunc_ln1000_1_reg_1867;
wire   [7:0] trunc_ln996_1_fu_1139_p1;
reg   [7:0] trunc_ln996_1_reg_1872;
wire   [0:0] icmp_ln1007_fu_1202_p2;
reg   [0:0] icmp_ln1007_reg_1877;
wire    ap_CS_fsm_state14;
wire   [0:0] select_ln1007_fu_1219_p3;
reg   [0:0] select_ln1007_reg_1882;
wire   [0:0] icmp_ln1011_fu_1312_p2;
reg   [0:0] icmp_ln1011_reg_1887;
wire   [0:0] tobool34_i_i663_fu_1318_p2;
reg   [0:0] tobool34_i_i663_reg_1892;
reg   [33:0] m_9_reg_1897;
wire    ap_CS_fsm_state15;
reg   [0:0] p_Result_8_reg_1902;
reg   [62:0] m_8_reg_1907;
reg   [0:0] p_Result_15_reg_1912;
reg    ap_enable_reg_pp0_iter0;
wire    ap_CS_fsm_state6;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state7;
reg    ap_enable_reg_pp0_iter1;
wire   [63:0] i_V_cast_fu_855_p1;
wire    ap_block_pp0_stage0;
reg   [16:0] r_V_1_fu_182;
reg   [16:0] ap_sig_allocacmp_r_V_1_load_1;
reg  signed [16:0] grp_load_fu_245_p1;
reg   [16:0] y_i_V_2_fu_186;
reg   [16:0] ap_sig_allocacmp_y_i_V_2_load;
reg   [16:0] theta_i_V_fu_190;
wire   [16:0] theta_i_V_3_fu_947_p3;
wire   [16:0] select_ln1548_fu_800_p3;
reg   [4:0] i_V_fu_194;
wire   [4:0] add_ln870_fu_846_p2;
wire    ap_CS_fsm_state16;
wire   [63:0] grp_fu_237_p1;
wire   [63:0] ireg_fu_256_p1;
wire   [62:0] trunc_ln564_fu_260_p1;
wire   [63:0] grp_fu_241_p1;
wire   [63:0] ireg_1_fu_292_p1;
wire   [62:0] trunc_ln564_1_fu_296_p1;
wire   [52:0] p_Result_18_fu_331_p3;
wire   [53:0] zext_ln578_fu_338_p1;
wire   [53:0] man_V_1_fu_342_p2;
wire   [11:0] zext_ln494_fu_328_p1;
wire   [11:0] F2_fu_355_p2;
wire   [0:0] icmp_ln590_fu_361_p2;
wire   [11:0] add_ln590_fu_367_p2;
wire   [11:0] sub_ln590_fu_373_p2;
wire   [31:0] bitcast_ln709_fu_409_p1;
wire   [0:0] tmp_2_fu_412_p3;
wire   [0:0] icmp_ln591_fu_387_p2;
wire   [0:0] xor_ln580_fu_428_p2;
wire   [0:0] and_ln591_fu_433_p2;
wire   [0:0] or_ln591_fu_447_p2;
wire   [0:0] xor_ln591_fu_452_p2;
wire   [0:0] xor_ln594_fu_464_p2;
wire   [0:0] and_ln594_fu_470_p2;
wire   [16:0] select_ln597_fu_420_p3;
wire   [16:0] select_ln591_fu_439_p3;
wire   [0:0] or_ln590_fu_484_p2;
wire   [0:0] icmp_ln612_fu_403_p2;
wire   [0:0] xor_ln590_fu_490_p2;
wire   [52:0] p_Result_20_fu_505_p3;
wire   [53:0] zext_ln578_1_fu_512_p1;
wire   [53:0] man_V_4_fu_516_p2;
wire   [11:0] zext_ln494_1_fu_502_p1;
wire   [11:0] F2_1_fu_529_p2;
wire   [0:0] icmp_ln590_1_fu_535_p2;
wire   [11:0] add_ln590_1_fu_541_p2;
wire   [11:0] sub_ln590_1_fu_547_p2;
wire   [31:0] bitcast_ln709_2_fu_583_p1;
wire   [0:0] tmp_6_fu_586_p3;
wire   [0:0] icmp_ln591_1_fu_561_p2;
wire   [0:0] xor_ln580_1_fu_602_p2;
wire   [0:0] and_ln591_1_fu_607_p2;
wire   [0:0] or_ln591_1_fu_621_p2;
wire   [0:0] xor_ln591_1_fu_626_p2;
wire   [0:0] xor_ln594_1_fu_638_p2;
wire   [0:0] and_ln594_2_fu_644_p2;
wire   [16:0] select_ln597_1_fu_594_p3;
wire   [16:0] select_ln591_1_fu_613_p3;
wire   [0:0] or_ln590_1_fu_658_p2;
wire   [0:0] icmp_ln612_1_fu_577_p2;
wire   [0:0] xor_ln590_1_fu_664_p2;
wire   [53:0] zext_ln595_fu_679_p1;
wire   [53:0] ashr_ln595_fu_683_p2;
wire   [0:0] and_ln594_1_fu_692_p2;
wire   [16:0] trunc_ln595_fu_688_p1;
wire   [53:0] zext_ln595_1_fu_706_p1;
wire   [53:0] ashr_ln595_1_fu_710_p2;
wire   [0:0] and_ln594_3_fu_719_p2;
wire   [16:0] trunc_ln595_1_fu_715_p1;
wire   [16:0] sext_ln590cast_fu_730_p1;
wire   [16:0] shl_ln613_fu_733_p2;
wire   [16:0] select_ln612_fu_738_p3;
wire   [16:0] sext_ln590_1cast_fu_751_p1;
wire   [16:0] shl_ln613_1_fu_754_p2;
wire   [16:0] select_ln612_1_fu_759_p3;
wire   [16:0] x_i_V_fu_744_p3;
wire   [16:0] y_i_V_fu_765_p3;
wire   [0:0] tmp_8_fu_792_p3;
wire   [0:0] tmp_7_fu_772_p3;
wire   [16:0] y_i_V_7_fu_786_p2;
wire   [16:0] x_i_V_1_fu_780_p2;
wire   [3:0] sh_fu_866_p1;
wire   [16:0] zext_ln1386_fu_870_p1;
wire   [16:0] r_1_fu_874_p2;
wire   [16:0] r_2_fu_880_p2;
wire   [16:0] x_i_V_3_fu_886_p2;
wire   [16:0] x_i_V_4_fu_898_p2;
wire   [16:0] y_i_V_9_fu_892_p2;
wire   [16:0] y_i_V_10_fu_904_p2;
wire   [16:0] zext_ln1452_fu_931_p1;
wire   [16:0] theta_i_V_1_fu_935_p2;
wire   [16:0] theta_i_V_2_fu_941_p2;
wire  signed [30:0] grp_fu_1561_p2;
wire   [29:0] trunc_ln1168_fu_971_p1;
wire   [29:0] tmp_V_fu_986_p2;
reg   [33:0] p_Result_s_fu_1003_p4;
wire   [63:0] p_Result_22_fu_1013_p3;
reg   [63:0] tmp_fu_1021_p3;
wire   [31:0] l_fu_1029_p1;
wire   [16:0] tmp_V_2_fu_1085_p2;
reg   [16:0] p_Result_11_fu_1099_p4;
wire   [31:0] p_Result_26_fu_1109_p3;
reg   [31:0] l_1_fu_1117_p3;
wire   [5:0] sub_ln1000_fu_1148_p2;
wire   [33:0] zext_ln1000_fu_1153_p1;
wire   [33:0] zext_ln1002_fu_1163_p1;
wire   [33:0] lshr_ln1000_fu_1157_p2;
wire   [33:0] shl_ln1002_fu_1166_p2;
wire   [33:0] or_ln1002_1_fu_1172_p2;
wire   [33:0] and_ln1002_fu_1178_p2;
wire   [0:0] tmp_11_fu_1189_p3;
wire   [0:0] xor_ln1002_fu_1196_p2;
wire   [0:0] icmp_ln999_fu_1143_p2;
wire   [0:0] icmp_ln1002_fu_1183_p2;
wire   [0:0] select_ln999_fu_1212_p3;
wire   [0:0] and_ln1002_1_fu_1207_p2;
wire   [31:0] lsb_index_1_fu_1227_p2;
wire   [30:0] tmp_14_fu_1232_p4;
wire   [4:0] sub_ln1000_1_fu_1248_p2;
wire   [16:0] zext_ln1000_1_fu_1253_p1;
wire   [16:0] lshr_ln1000_1_fu_1257_p2;
wire   [16:0] p_Result_13_fu_1263_p2;
wire   [0:0] tmp_15_fu_1274_p3;
wire   [0:0] icmp_ln999_1_fu_1242_p2;
wire   [0:0] icmp_ln1000_fu_1268_p2;
wire   [16:0] add_ln1002_fu_1294_p2;
wire   [0:0] p_Result_14_fu_1299_p3;
wire   [0:0] and_ln999_fu_1288_p2;
wire   [0:0] a_1_fu_1306_p2;
wire   [0:0] xor_ln1002_1_fu_1282_p2;
wire   [31:0] sub_ln1008_fu_1324_p2;
wire   [33:0] zext_ln1008_fu_1329_p1;
wire   [31:0] add_ln1007_fu_1338_p2;
wire   [33:0] zext_ln1007_fu_1343_p1;
wire   [33:0] lshr_ln1007_fu_1347_p2;
wire   [33:0] shl_ln1008_fu_1333_p2;
wire   [33:0] m_fu_1352_p3;
wire   [34:0] zext_ln1004_fu_1359_p1;
wire   [34:0] zext_ln1014_fu_1363_p1;
wire   [34:0] m_1_fu_1366_p2;
wire   [31:0] add_ln1011_fu_1393_p2;
wire   [63:0] zext_ln1010_fu_1390_p1;
wire   [63:0] zext_ln1011_fu_1398_p1;
wire   [31:0] sub_ln1012_fu_1408_p2;
wire   [63:0] zext_ln1012_fu_1413_p1;
wire   [63:0] lshr_ln1011_fu_1402_p2;
wire   [63:0] shl_ln1012_fu_1417_p2;
wire   [63:0] m_4_fu_1423_p3;
wire   [63:0] zext_ln1014_1_fu_1430_p1;
wire   [63:0] m_5_fu_1433_p2;
wire   [7:0] sub_ln1017_fu_1467_p2;
wire   [7:0] select_ln996_fu_1460_p3;
wire   [7:0] add_ln1017_fu_1472_p2;
wire   [63:0] zext_ln1004_1_fu_1457_p1;
wire   [8:0] tmp_3_fu_1478_p3;
wire   [63:0] p_Result_24_fu_1485_p5;
wire   [31:0] LD_2_fu_1497_p1;
wire   [7:0] sub_ln1017_1_fu_1519_p2;
wire   [7:0] select_ln996_1_fu_1512_p3;
wire   [7:0] add_ln1017_1_fu_1524_p2;
wire   [63:0] zext_ln1015_fu_1509_p1;
wire   [8:0] tmp_4_fu_1530_p3;
wire   [63:0] p_Result_27_fu_1537_p5;
wire   [31:0] LD_3_fu_1549_p1;
wire   [12:0] grp_fu_1561_p1;
reg   [14:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

cordiccart2pol_angles_V #(
    .DataWidth( 13 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
angles_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(angles_V_address0),
    .ce0(angles_V_ce0),
    .q0(angles_V_q0)
);

cordiccart2pol_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .x(x),
    .y(y),
    .r(r),
    .r_ap_vld(r_ap_vld),
    .theta(theta),
    .theta_ap_vld(theta_ap_vld),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

cordiccart2pol_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(x),
    .ce(1'b1),
    .dout(grp_fu_237_p1)
);

cordiccart2pol_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(y),
    .ce(1'b1),
    .dout(grp_fu_241_p1)
);

cordiccart2pol_mul_mul_17s_13ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 31 ))
mul_mul_17s_13ns_31_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_load_fu_245_p1),
    .din1(grp_fu_1561_p1),
    .ce(1'b1),
    .dout(grp_fu_1561_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state7) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state7);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_V_fu_194 <= 5'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1057_fu_840_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_V_fu_194 <= add_ln870_fu_846_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        r_V_1_fu_182 <= x_i_V_2_reg_1749;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_1_fu_182 <= x_i_V_5_reg_1767;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        theta_i_V_fu_190 <= select_ln1548_fu_800_p3;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        theta_i_V_fu_190 <= theta_i_V_3_fu_947_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        y_i_V_2_fu_186 <= y_i_V_8_reg_1744;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_i_V_2_fu_186 <= y_i_V_11_reg_1772;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln580_1_reg_1647 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        and_ln590_1_reg_1709 <= and_ln590_1_fu_632_p2;
        and_ln612_1_reg_1719 <= and_ln612_1_fu_670_p2;
        icmp_ln594_1_reg_1704 <= icmp_ln594_1_fu_571_p2;
        man_V_5_reg_1689 <= man_V_5_fu_522_p3;
        select_ln594_2_reg_1714 <= select_ln594_2_fu_650_p3;
        sh_amt_1_reg_1694 <= sh_amt_1_fu_553_p3;
        trunc_ln592_1_reg_1699 <= trunc_ln592_1_fu_567_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln580_reg_1625 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        and_ln590_reg_1674 <= and_ln590_fu_458_p2;
        and_ln612_reg_1684 <= and_ln612_fu_496_p2;
        icmp_ln594_reg_1669 <= icmp_ln594_fu_397_p2;
        man_V_2_reg_1654 <= man_V_2_fu_348_p3;
        select_ln594_reg_1679 <= select_ln594_fu_476_p3;
        sh_amt_reg_1659 <= sh_amt_fu_379_p3;
        trunc_ln592_reg_1664 <= trunc_ln592_fu_393_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        exp_tmp_1_reg_1637 <= {{ireg_1_fu_292_p1[62:52]}};
        exp_tmp_reg_1615 <= {{ireg_fu_256_p1[62:52]}};
        icmp_ln580_1_reg_1647 <= icmp_ln580_1_fu_322_p2;
        icmp_ln580_reg_1625 <= icmp_ln580_fu_286_p2;
        p_Result_17_reg_1610 <= ireg_fu_256_p1[32'd63];
        p_Result_19_reg_1632 <= ireg_1_fu_292_p1[32'd63];
        trunc_ln574_1_reg_1642 <= trunc_ln574_1_fu_318_p1;
        trunc_ln574_reg_1620 <= trunc_ln574_fu_282_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln988_reg_1782 == 1'd0))) begin
        icmp_ln1007_reg_1877 <= icmp_ln1007_fu_1202_p2;
        select_ln1007_reg_1882 <= select_ln1007_fu_1219_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln988_1_reg_1838 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        icmp_ln1011_reg_1887 <= icmp_ln1011_fu_1312_p2;
        tobool34_i_i663_reg_1892 <= tobool34_i_i663_fu_1318_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1057_fu_840_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1547_reg_1757 <= icmp_ln1547_fu_860_p2;
        x_i_V_5_reg_1767 <= x_i_V_5_fu_910_p3;
        y_i_V_11_reg_1772 <= y_i_V_11_fu_918_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        icmp_ln988_1_reg_1838 <= icmp_ln988_1_fu_1071_p2;
        p_Result_25_reg_1843 <= theta_i_V_fu_190[32'd16];
        sub_ln997_1_reg_1855 <= sub_ln997_1_fu_1125_p2;
        tmp_V_5_reg_1848 <= tmp_V_5_fu_1091_p3;
        trunc_ln1000_1_reg_1867 <= trunc_ln1000_1_fu_1135_p1;
        trunc_ln996_1_reg_1872 <= trunc_ln996_1_fu_1139_p1;
        trunc_ln997_reg_1862 <= trunc_ln997_fu_1131_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        icmp_ln988_reg_1782 <= icmp_ln988_fu_974_p2;
        p_Result_21_reg_1787 <= grp_fu_1561_p2[32'd30];
        tmp_V_4_reg_1792 <= tmp_V_4_fu_992_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln988_reg_1782 == 1'd0))) begin
        lsb_index_reg_1810 <= lsb_index_fu_1039_p2;
        p_Result_23_reg_1827 <= p_Result_23_fu_1059_p3;
        sext_ln990_reg_1797 <= sext_ln990_fu_1000_p1;
        sub_ln997_reg_1804 <= sub_ln997_fu_1033_p2;
        tmp_10_reg_1817 <= {{lsb_index_fu_1039_p2[31:1]}};
        trunc_ln1000_reg_1822 <= trunc_ln1000_fu_1055_p1;
        trunc_ln996_reg_1833 <= trunc_ln996_fu_1067_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln988_1_reg_1838 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        m_8_reg_1907 <= {{m_5_fu_1433_p2[63:1]}};
        p_Result_15_reg_1912 <= m_5_fu_1433_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln988_reg_1782 == 1'd0))) begin
        m_9_reg_1897 <= {{m_1_fu_1366_p2[34:1]}};
        p_Result_8_reg_1902 <= m_1_fu_1366_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln612_reg_1684) & (icmp_ln580_reg_1625 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        select_ln594_1_reg_1729 <= select_ln594_1_fu_696_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln612_1_reg_1719) & (icmp_ln580_1_reg_1647 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        select_ln594_3_reg_1739 <= select_ln594_3_fu_723_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln580_1_reg_1647 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        sext_ln590_1_reg_1734 <= sext_ln590_1_fu_703_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln580_reg_1625 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        sext_ln590_reg_1724 <= sext_ln590_fu_676_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        x_i_V_2_reg_1749 <= x_i_V_2_fu_816_p3;
        y_i_V_8_reg_1744 <= y_i_V_8_fu_808_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        x_read_reg_1604 <= x;
        y_read_reg_1598 <= y;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        angles_V_ce0 = 1'b1;
    end else begin
        angles_V_ce0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((icmp_ln1057_fu_840_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_r_V_1_load_1 = x_i_V_5_reg_1767;
    end else begin
        ap_sig_allocacmp_r_V_1_load_1 = r_V_1_fu_182;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_y_i_V_2_load = y_i_V_11_reg_1772;
    end else begin
        ap_sig_allocacmp_y_i_V_2_load = y_i_V_2_fu_186;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_load_fu_245_p1 = r_V_1_fu_182;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1057_fu_840_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_load_fu_245_p1 = ap_sig_allocacmp_r_V_1_load_1;
    end else begin
        grp_load_fu_245_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        r_ap_vld = 1'b1;
    end else begin
        r_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        theta_ap_vld = 1'b1;
    end else begin
        theta_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1057_fu_840_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1057_fu_840_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_529_p2 = (12'd1075 - zext_ln494_1_fu_502_p1);

assign F2_fu_355_p2 = (12'd1075 - zext_ln494_fu_328_p1);

assign LD_2_fu_1497_p1 = p_Result_24_fu_1485_p5[31:0];

assign LD_3_fu_1549_p1 = p_Result_27_fu_1537_p5[31:0];

assign a_1_fu_1306_p2 = (p_Result_14_fu_1299_p3 | and_ln999_fu_1288_p2);

assign add_ln1002_fu_1294_p2 = ($signed(trunc_ln997_reg_1862) + $signed(17'd131048));

assign add_ln1007_fu_1338_p2 = ($signed(sub_ln997_reg_1804) + $signed(32'd4294967271));

assign add_ln1011_fu_1393_p2 = ($signed(sub_ln997_1_reg_1855) + $signed(32'd4294967271));

assign add_ln1017_1_fu_1524_p2 = (sub_ln1017_1_fu_1519_p2 + select_ln996_1_fu_1512_p3);

assign add_ln1017_fu_1472_p2 = (sub_ln1017_fu_1467_p2 + select_ln996_fu_1460_p3);

assign add_ln590_1_fu_541_p2 = ($signed(F2_1_fu_529_p2) + $signed(12'd4083));

assign add_ln590_fu_367_p2 = ($signed(F2_fu_355_p2) + $signed(12'd4083));

assign add_ln870_fu_846_p2 = (i_V_fu_194 + 5'd1);

assign and_ln1002_1_fu_1207_p2 = (xor_ln1002_fu_1196_p2 & p_Result_23_reg_1827);

assign and_ln1002_fu_1178_p2 = (sext_ln990_reg_1797 & or_ln1002_1_fu_1172_p2);

assign and_ln590_1_fu_632_p2 = (xor_ln591_1_fu_626_p2 & icmp_ln590_1_fu_535_p2);

assign and_ln590_fu_458_p2 = (xor_ln591_fu_452_p2 & icmp_ln590_fu_361_p2);

assign and_ln591_1_fu_607_p2 = (xor_ln580_1_fu_602_p2 & icmp_ln591_1_fu_561_p2);

assign and_ln591_fu_433_p2 = (xor_ln580_fu_428_p2 & icmp_ln591_fu_387_p2);

assign and_ln594_1_fu_692_p2 = (icmp_ln594_reg_1669 & and_ln590_reg_1674);

assign and_ln594_2_fu_644_p2 = (xor_ln594_1_fu_638_p2 & and_ln590_1_fu_632_p2);

assign and_ln594_3_fu_719_p2 = (icmp_ln594_1_reg_1704 & and_ln590_1_reg_1709);

assign and_ln594_fu_470_p2 = (xor_ln594_fu_464_p2 & and_ln590_fu_458_p2);

assign and_ln612_1_fu_670_p2 = (xor_ln590_1_fu_664_p2 & icmp_ln612_1_fu_577_p2);

assign and_ln612_fu_496_p2 = (xor_ln590_fu_490_p2 & icmp_ln612_fu_403_p2);

assign and_ln999_fu_1288_p2 = (icmp_ln999_1_fu_1242_p2 & icmp_ln1000_fu_1268_p2);

assign angles_V_address0 = i_V_cast_fu_855_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln595_1_fu_710_p2 = $signed(man_V_5_reg_1689) >>> zext_ln595_1_fu_706_p1;

assign ashr_ln595_fu_683_p2 = $signed(man_V_2_reg_1654) >>> zext_ln595_fu_679_p1;

assign bitcast_ln709_2_fu_583_p1 = y_read_reg_1598;

assign bitcast_ln709_fu_409_p1 = x_read_reg_1604;

assign grp_fu_1561_p1 = 31'd4974;

assign i_V_cast_fu_855_p1 = i_V_fu_194;

assign icmp_ln1000_fu_1268_p2 = ((p_Result_13_fu_1263_p2 != 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln1002_fu_1183_p2 = ((and_ln1002_fu_1178_p2 != 34'd0) ? 1'b1 : 1'b0);

assign icmp_ln1007_fu_1202_p2 = (($signed(lsb_index_reg_1810) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1011_fu_1312_p2 = (($signed(lsb_index_1_fu_1227_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1057_fu_840_p2 = ((i_V_fu_194 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln1547_fu_860_p2 = (($signed(ap_sig_allocacmp_y_i_V_2_load) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign icmp_ln580_1_fu_322_p2 = ((trunc_ln564_1_fu_296_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_fu_286_p2 = ((trunc_ln564_fu_260_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln590_1_fu_535_p2 = (($signed(F2_1_fu_529_p2) > $signed(12'd13)) ? 1'b1 : 1'b0);

assign icmp_ln590_fu_361_p2 = (($signed(F2_fu_355_p2) > $signed(12'd13)) ? 1'b1 : 1'b0);

assign icmp_ln591_1_fu_561_p2 = ((F2_1_fu_529_p2 == 12'd13) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_387_p2 = ((F2_fu_355_p2 == 12'd13) ? 1'b1 : 1'b0);

assign icmp_ln594_1_fu_571_p2 = ((sh_amt_1_fu_553_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_fu_397_p2 = ((sh_amt_fu_379_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln612_1_fu_577_p2 = ((sh_amt_1_fu_553_p3 < 12'd17) ? 1'b1 : 1'b0);

assign icmp_ln612_fu_403_p2 = ((sh_amt_fu_379_p3 < 12'd17) ? 1'b1 : 1'b0);

assign icmp_ln988_1_fu_1071_p2 = ((theta_i_V_fu_190 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln988_fu_974_p2 = ((grp_fu_1561_p2 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln999_1_fu_1242_p2 = (($signed(tmp_14_fu_1232_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln999_fu_1143_p2 = (($signed(tmp_10_reg_1817) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign ireg_1_fu_292_p1 = grp_fu_241_p1;

assign ireg_fu_256_p1 = grp_fu_237_p1;


always @ (p_Result_26_fu_1109_p3) begin
    if (p_Result_26_fu_1109_p3[0] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd0;
    end else if (p_Result_26_fu_1109_p3[1] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd1;
    end else if (p_Result_26_fu_1109_p3[2] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd2;
    end else if (p_Result_26_fu_1109_p3[3] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd3;
    end else if (p_Result_26_fu_1109_p3[4] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd4;
    end else if (p_Result_26_fu_1109_p3[5] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd5;
    end else if (p_Result_26_fu_1109_p3[6] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd6;
    end else if (p_Result_26_fu_1109_p3[7] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd7;
    end else if (p_Result_26_fu_1109_p3[8] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd8;
    end else if (p_Result_26_fu_1109_p3[9] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd9;
    end else if (p_Result_26_fu_1109_p3[10] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd10;
    end else if (p_Result_26_fu_1109_p3[11] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd11;
    end else if (p_Result_26_fu_1109_p3[12] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd12;
    end else if (p_Result_26_fu_1109_p3[13] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd13;
    end else if (p_Result_26_fu_1109_p3[14] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd14;
    end else if (p_Result_26_fu_1109_p3[15] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd15;
    end else if (p_Result_26_fu_1109_p3[16] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd16;
    end else if (p_Result_26_fu_1109_p3[17] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd17;
    end else if (p_Result_26_fu_1109_p3[18] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd18;
    end else if (p_Result_26_fu_1109_p3[19] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd19;
    end else if (p_Result_26_fu_1109_p3[20] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd20;
    end else if (p_Result_26_fu_1109_p3[21] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd21;
    end else if (p_Result_26_fu_1109_p3[22] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd22;
    end else if (p_Result_26_fu_1109_p3[23] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd23;
    end else if (p_Result_26_fu_1109_p3[24] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd24;
    end else if (p_Result_26_fu_1109_p3[25] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd25;
    end else if (p_Result_26_fu_1109_p3[26] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd26;
    end else if (p_Result_26_fu_1109_p3[27] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd27;
    end else if (p_Result_26_fu_1109_p3[28] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd28;
    end else if (p_Result_26_fu_1109_p3[29] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd29;
    end else if (p_Result_26_fu_1109_p3[30] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd30;
    end else if (p_Result_26_fu_1109_p3[31] == 1'b1) begin
        l_1_fu_1117_p3 = 32'd31;
    end else begin
        l_1_fu_1117_p3 = 32'd32;
    end
end

assign l_fu_1029_p1 = tmp_fu_1021_p3[31:0];

assign lsb_index_1_fu_1227_p2 = ($signed(sub_ln997_1_reg_1855) + $signed(32'd4294967272));

assign lsb_index_fu_1039_p2 = ($signed(sub_ln997_fu_1033_p2) + $signed(32'd4294967272));

assign lshr_ln1000_1_fu_1257_p2 = 17'd131071 >> zext_ln1000_1_fu_1253_p1;

assign lshr_ln1000_fu_1157_p2 = 34'd17179869183 >> zext_ln1000_fu_1153_p1;

assign lshr_ln1007_fu_1347_p2 = sext_ln990_reg_1797 >> zext_ln1007_fu_1343_p1;

assign lshr_ln1011_fu_1402_p2 = zext_ln1010_fu_1390_p1 >> zext_ln1011_fu_1398_p1;

assign m_1_fu_1366_p2 = (zext_ln1004_fu_1359_p1 + zext_ln1014_fu_1363_p1);

assign m_4_fu_1423_p3 = ((icmp_ln1011_reg_1887[0:0] == 1'b1) ? lshr_ln1011_fu_1402_p2 : shl_ln1012_fu_1417_p2);

assign m_5_fu_1433_p2 = (m_4_fu_1423_p3 + zext_ln1014_1_fu_1430_p1);

assign m_fu_1352_p3 = ((icmp_ln1007_reg_1877[0:0] == 1'b1) ? lshr_ln1007_fu_1347_p2 : shl_ln1008_fu_1333_p2);

assign man_V_1_fu_342_p2 = (54'd0 - zext_ln578_fu_338_p1);

assign man_V_2_fu_348_p3 = ((p_Result_17_reg_1610[0:0] == 1'b1) ? man_V_1_fu_342_p2 : zext_ln578_fu_338_p1);

assign man_V_4_fu_516_p2 = (54'd0 - zext_ln578_1_fu_512_p1);

assign man_V_5_fu_522_p3 = ((p_Result_19_reg_1632[0:0] == 1'b1) ? man_V_4_fu_516_p2 : zext_ln578_1_fu_512_p1);

assign or_ln1002_1_fu_1172_p2 = (shl_ln1002_fu_1166_p2 | lshr_ln1000_fu_1157_p2);

assign or_ln590_1_fu_658_p2 = (or_ln591_1_fu_621_p2 | icmp_ln590_1_fu_535_p2);

assign or_ln590_fu_484_p2 = (or_ln591_fu_447_p2 | icmp_ln590_fu_361_p2);

assign or_ln591_1_fu_621_p2 = (icmp_ln591_1_fu_561_p2 | icmp_ln580_1_reg_1647);

assign or_ln591_fu_447_p2 = (icmp_ln591_fu_387_p2 | icmp_ln580_reg_1625);

integer ap_tvar_int_0;

always @ (tmp_V_5_fu_1091_p3) begin
    for (ap_tvar_int_0 = 17 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 16 - 0) begin
            p_Result_11_fu_1099_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_11_fu_1099_p4[ap_tvar_int_0] = tmp_V_5_fu_1091_p3[16 - ap_tvar_int_0];
        end
    end
end

assign p_Result_13_fu_1263_p2 = (tmp_V_5_reg_1848 & lshr_ln1000_1_fu_1257_p2);

assign p_Result_14_fu_1299_p3 = tmp_V_5_reg_1848[add_ln1002_fu_1294_p2];

assign p_Result_18_fu_331_p3 = {{1'd1}, {trunc_ln574_reg_1620}};

assign p_Result_20_fu_505_p3 = {{1'd1}, {trunc_ln574_1_reg_1642}};

assign p_Result_21_fu_979_p3 = grp_fu_1561_p2[32'd30];

assign p_Result_22_fu_1013_p3 = {{30'd1073741823}, {p_Result_s_fu_1003_p4}};

assign p_Result_23_fu_1059_p3 = sext_ln990_fu_1000_p1[lsb_index_fu_1039_p2];

assign p_Result_24_fu_1485_p5 = {{zext_ln1004_1_fu_1457_p1[63:32]}, {tmp_3_fu_1478_p3}, {zext_ln1004_1_fu_1457_p1[22:0]}};

assign p_Result_25_fu_1077_p3 = theta_i_V_fu_190[32'd16];

assign p_Result_26_fu_1109_p3 = {{15'd32767}, {p_Result_11_fu_1099_p4}};

assign p_Result_27_fu_1537_p5 = {{zext_ln1015_fu_1509_p1[63:32]}, {tmp_4_fu_1530_p3}, {zext_ln1015_fu_1509_p1[22:0]}};

integer ap_tvar_int_1;

always @ (sext_ln990_fu_1000_p1) begin
    for (ap_tvar_int_1 = 34 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 33 - 0) begin
            p_Result_s_fu_1003_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_s_fu_1003_p4[ap_tvar_int_1] = sext_ln990_fu_1000_p1[33 - ap_tvar_int_1];
        end
    end
end

assign r = ((icmp_ln988_reg_1782[0:0] == 1'b1) ? 32'd0 : LD_2_fu_1497_p1);

assign r_1_fu_874_p2 = $signed(ap_sig_allocacmp_y_i_V_2_load) >>> zext_ln1386_fu_870_p1;

assign r_2_fu_880_p2 = $signed(grp_load_fu_245_p1) >>> zext_ln1386_fu_870_p1;

assign select_ln1007_fu_1219_p3 = ((icmp_ln1007_fu_1202_p2[0:0] == 1'b1) ? select_ln999_fu_1212_p3 : and_ln1002_1_fu_1207_p2);

assign select_ln1548_fu_800_p3 = ((tmp_8_fu_792_p3[0:0] == 1'b1) ? 17'd25735 : 17'd0);

assign select_ln591_1_fu_613_p3 = ((and_ln591_1_fu_607_p2[0:0] == 1'b1) ? trunc_ln592_1_fu_567_p1 : 17'd0);

assign select_ln591_fu_439_p3 = ((and_ln591_fu_433_p2[0:0] == 1'b1) ? trunc_ln592_fu_393_p1 : 17'd0);

assign select_ln594_1_fu_696_p3 = ((and_ln594_1_fu_692_p2[0:0] == 1'b1) ? trunc_ln595_fu_688_p1 : select_ln594_reg_1679);

assign select_ln594_2_fu_650_p3 = ((and_ln594_2_fu_644_p2[0:0] == 1'b1) ? select_ln597_1_fu_594_p3 : select_ln591_1_fu_613_p3);

assign select_ln594_3_fu_723_p3 = ((and_ln594_3_fu_719_p2[0:0] == 1'b1) ? trunc_ln595_1_fu_715_p1 : select_ln594_2_reg_1714);

assign select_ln594_fu_476_p3 = ((and_ln594_fu_470_p2[0:0] == 1'b1) ? select_ln597_fu_420_p3 : select_ln591_fu_439_p3);

assign select_ln597_1_fu_594_p3 = ((tmp_6_fu_586_p3[0:0] == 1'b1) ? 17'd131071 : 17'd0);

assign select_ln597_fu_420_p3 = ((tmp_2_fu_412_p3[0:0] == 1'b1) ? 17'd131071 : 17'd0);

assign select_ln612_1_fu_759_p3 = ((and_ln612_1_reg_1719[0:0] == 1'b1) ? shl_ln613_1_fu_754_p2 : select_ln594_3_reg_1739);

assign select_ln612_fu_738_p3 = ((and_ln612_reg_1684[0:0] == 1'b1) ? shl_ln613_fu_733_p2 : select_ln594_1_reg_1729);

assign select_ln996_1_fu_1512_p3 = ((p_Result_15_reg_1912[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln996_fu_1460_p3 = ((p_Result_8_reg_1902[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln999_fu_1212_p3 = ((icmp_ln999_fu_1143_p2[0:0] == 1'b1) ? icmp_ln1002_fu_1183_p2 : p_Result_23_reg_1827);

assign sext_ln590_1_fu_703_p1 = sh_amt_1_reg_1694;

assign sext_ln590_1cast_fu_751_p1 = sext_ln590_1_reg_1734[16:0];

assign sext_ln590_fu_676_p1 = sh_amt_reg_1659;

assign sext_ln590cast_fu_730_p1 = sext_ln590_reg_1724[16:0];

assign sext_ln990_fu_1000_p1 = $signed(tmp_V_4_reg_1792);

assign sh_amt_1_fu_553_p3 = ((icmp_ln590_1_fu_535_p2[0:0] == 1'b1) ? add_ln590_1_fu_541_p2 : sub_ln590_1_fu_547_p2);

assign sh_amt_fu_379_p3 = ((icmp_ln590_fu_361_p2[0:0] == 1'b1) ? add_ln590_fu_367_p2 : sub_ln590_fu_373_p2);

assign sh_fu_866_p1 = i_V_fu_194[3:0];

assign shl_ln1002_fu_1166_p2 = 34'd1 << zext_ln1002_fu_1163_p1;

assign shl_ln1008_fu_1333_p2 = sext_ln990_reg_1797 << zext_ln1008_fu_1329_p1;

assign shl_ln1012_fu_1417_p2 = zext_ln1010_fu_1390_p1 << zext_ln1012_fu_1413_p1;

assign shl_ln613_1_fu_754_p2 = trunc_ln592_1_reg_1699 << sext_ln590_1cast_fu_751_p1;

assign shl_ln613_fu_733_p2 = trunc_ln592_reg_1664 << sext_ln590cast_fu_730_p1;

assign sub_ln1000_1_fu_1248_p2 = (5'd10 - trunc_ln1000_1_reg_1867);

assign sub_ln1000_fu_1148_p2 = ($signed(6'd59) - $signed(trunc_ln1000_reg_1822));

assign sub_ln1008_fu_1324_p2 = (32'd25 - sub_ln997_reg_1804);

assign sub_ln1012_fu_1408_p2 = (32'd25 - sub_ln997_1_reg_1855);

assign sub_ln1017_1_fu_1519_p2 = (8'd4 - trunc_ln996_1_reg_1872);

assign sub_ln1017_fu_1467_p2 = (8'd8 - trunc_ln996_reg_1833);

assign sub_ln590_1_fu_547_p2 = (12'd13 - F2_1_fu_529_p2);

assign sub_ln590_fu_373_p2 = (12'd13 - F2_fu_355_p2);

assign sub_ln997_1_fu_1125_p2 = (32'd17 - l_1_fu_1117_p3);

assign sub_ln997_fu_1033_p2 = (32'd34 - l_fu_1029_p1);

assign theta = ((icmp_ln988_1_reg_1838[0:0] == 1'b1) ? 32'd0 : LD_3_fu_1549_p1);

assign theta_i_V_1_fu_935_p2 = (zext_ln1452_fu_931_p1 + theta_i_V_fu_190);

assign theta_i_V_2_fu_941_p2 = (theta_i_V_fu_190 - zext_ln1452_fu_931_p1);

assign theta_i_V_3_fu_947_p3 = ((icmp_ln1547_reg_1757[0:0] == 1'b1) ? theta_i_V_1_fu_935_p2 : theta_i_V_2_fu_941_p2);

assign tmp_11_fu_1189_p3 = lsb_index_reg_1810[32'd31];

assign tmp_14_fu_1232_p4 = {{lsb_index_1_fu_1227_p2[31:1]}};

assign tmp_15_fu_1274_p3 = lsb_index_1_fu_1227_p2[32'd31];

assign tmp_2_fu_412_p3 = bitcast_ln709_fu_409_p1[32'd31];

assign tmp_3_fu_1478_p3 = {{p_Result_21_reg_1787}, {add_ln1017_fu_1472_p2}};

assign tmp_4_fu_1530_p3 = {{p_Result_25_reg_1843}, {add_ln1017_1_fu_1524_p2}};

assign tmp_6_fu_586_p3 = bitcast_ln709_2_fu_583_p1[32'd31];

assign tmp_7_fu_772_p3 = x_i_V_fu_744_p3[32'd16];

assign tmp_8_fu_792_p3 = x_i_V_fu_744_p3[32'd16];

assign tmp_V_2_fu_1085_p2 = (17'd0 - theta_i_V_fu_190);

assign tmp_V_4_fu_992_p3 = ((p_Result_21_fu_979_p3[0:0] == 1'b1) ? tmp_V_fu_986_p2 : trunc_ln1168_fu_971_p1);

assign tmp_V_5_fu_1091_p3 = ((p_Result_25_fu_1077_p3[0:0] == 1'b1) ? tmp_V_2_fu_1085_p2 : theta_i_V_fu_190);

assign tmp_V_fu_986_p2 = (30'd0 - trunc_ln1168_fu_971_p1);


always @ (p_Result_22_fu_1013_p3) begin
    if (p_Result_22_fu_1013_p3[0] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd0;
    end else if (p_Result_22_fu_1013_p3[1] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd1;
    end else if (p_Result_22_fu_1013_p3[2] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd2;
    end else if (p_Result_22_fu_1013_p3[3] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd3;
    end else if (p_Result_22_fu_1013_p3[4] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd4;
    end else if (p_Result_22_fu_1013_p3[5] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd5;
    end else if (p_Result_22_fu_1013_p3[6] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd6;
    end else if (p_Result_22_fu_1013_p3[7] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd7;
    end else if (p_Result_22_fu_1013_p3[8] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd8;
    end else if (p_Result_22_fu_1013_p3[9] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd9;
    end else if (p_Result_22_fu_1013_p3[10] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd10;
    end else if (p_Result_22_fu_1013_p3[11] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd11;
    end else if (p_Result_22_fu_1013_p3[12] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd12;
    end else if (p_Result_22_fu_1013_p3[13] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd13;
    end else if (p_Result_22_fu_1013_p3[14] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd14;
    end else if (p_Result_22_fu_1013_p3[15] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd15;
    end else if (p_Result_22_fu_1013_p3[16] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd16;
    end else if (p_Result_22_fu_1013_p3[17] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd17;
    end else if (p_Result_22_fu_1013_p3[18] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd18;
    end else if (p_Result_22_fu_1013_p3[19] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd19;
    end else if (p_Result_22_fu_1013_p3[20] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd20;
    end else if (p_Result_22_fu_1013_p3[21] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd21;
    end else if (p_Result_22_fu_1013_p3[22] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd22;
    end else if (p_Result_22_fu_1013_p3[23] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd23;
    end else if (p_Result_22_fu_1013_p3[24] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd24;
    end else if (p_Result_22_fu_1013_p3[25] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd25;
    end else if (p_Result_22_fu_1013_p3[26] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd26;
    end else if (p_Result_22_fu_1013_p3[27] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd27;
    end else if (p_Result_22_fu_1013_p3[28] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd28;
    end else if (p_Result_22_fu_1013_p3[29] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd29;
    end else if (p_Result_22_fu_1013_p3[30] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd30;
    end else if (p_Result_22_fu_1013_p3[31] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd31;
    end else if (p_Result_22_fu_1013_p3[32] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd32;
    end else if (p_Result_22_fu_1013_p3[33] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd33;
    end else if (p_Result_22_fu_1013_p3[34] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd34;
    end else if (p_Result_22_fu_1013_p3[35] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd35;
    end else if (p_Result_22_fu_1013_p3[36] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd36;
    end else if (p_Result_22_fu_1013_p3[37] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd37;
    end else if (p_Result_22_fu_1013_p3[38] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd38;
    end else if (p_Result_22_fu_1013_p3[39] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd39;
    end else if (p_Result_22_fu_1013_p3[40] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd40;
    end else if (p_Result_22_fu_1013_p3[41] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd41;
    end else if (p_Result_22_fu_1013_p3[42] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd42;
    end else if (p_Result_22_fu_1013_p3[43] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd43;
    end else if (p_Result_22_fu_1013_p3[44] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd44;
    end else if (p_Result_22_fu_1013_p3[45] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd45;
    end else if (p_Result_22_fu_1013_p3[46] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd46;
    end else if (p_Result_22_fu_1013_p3[47] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd47;
    end else if (p_Result_22_fu_1013_p3[48] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd48;
    end else if (p_Result_22_fu_1013_p3[49] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd49;
    end else if (p_Result_22_fu_1013_p3[50] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd50;
    end else if (p_Result_22_fu_1013_p3[51] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd51;
    end else if (p_Result_22_fu_1013_p3[52] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd52;
    end else if (p_Result_22_fu_1013_p3[53] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd53;
    end else if (p_Result_22_fu_1013_p3[54] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd54;
    end else if (p_Result_22_fu_1013_p3[55] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd55;
    end else if (p_Result_22_fu_1013_p3[56] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd56;
    end else if (p_Result_22_fu_1013_p3[57] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd57;
    end else if (p_Result_22_fu_1013_p3[58] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd58;
    end else if (p_Result_22_fu_1013_p3[59] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd59;
    end else if (p_Result_22_fu_1013_p3[60] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd60;
    end else if (p_Result_22_fu_1013_p3[61] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd61;
    end else if (p_Result_22_fu_1013_p3[62] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd62;
    end else if (p_Result_22_fu_1013_p3[63] == 1'b1) begin
        tmp_fu_1021_p3 = 64'd63;
    end else begin
        tmp_fu_1021_p3 = 64'd64;
    end
end

assign tobool34_i_i663_fu_1318_p2 = (xor_ln1002_1_fu_1282_p2 & a_1_fu_1306_p2);

assign trunc_ln1000_1_fu_1135_p1 = sub_ln997_1_fu_1125_p2[4:0];

assign trunc_ln1000_fu_1055_p1 = sub_ln997_fu_1033_p2[5:0];

assign trunc_ln1168_fu_971_p1 = grp_fu_1561_p2[29:0];

assign trunc_ln564_1_fu_296_p1 = ireg_1_fu_292_p1[62:0];

assign trunc_ln564_fu_260_p1 = ireg_fu_256_p1[62:0];

assign trunc_ln574_1_fu_318_p1 = ireg_1_fu_292_p1[51:0];

assign trunc_ln574_fu_282_p1 = ireg_fu_256_p1[51:0];

assign trunc_ln592_1_fu_567_p1 = man_V_5_fu_522_p3[16:0];

assign trunc_ln592_fu_393_p1 = man_V_2_fu_348_p3[16:0];

assign trunc_ln595_1_fu_715_p1 = ashr_ln595_1_fu_710_p2[16:0];

assign trunc_ln595_fu_688_p1 = ashr_ln595_fu_683_p2[16:0];

assign trunc_ln996_1_fu_1139_p1 = l_1_fu_1117_p3[7:0];

assign trunc_ln996_fu_1067_p1 = tmp_fu_1021_p3[7:0];

assign trunc_ln997_fu_1131_p1 = sub_ln997_1_fu_1125_p2[16:0];

assign x_i_V_1_fu_780_p2 = (17'd0 - x_i_V_fu_744_p3);

assign x_i_V_2_fu_816_p3 = ((tmp_7_fu_772_p3[0:0] == 1'b1) ? x_i_V_1_fu_780_p2 : x_i_V_fu_744_p3);

assign x_i_V_3_fu_886_p2 = ($signed(r_1_fu_874_p2) + $signed(grp_load_fu_245_p1));

assign x_i_V_4_fu_898_p2 = ($signed(grp_load_fu_245_p1) - $signed(r_1_fu_874_p2));

assign x_i_V_5_fu_910_p3 = ((icmp_ln1547_fu_860_p2[0:0] == 1'b1) ? x_i_V_3_fu_886_p2 : x_i_V_4_fu_898_p2);

assign x_i_V_fu_744_p3 = ((icmp_ln580_reg_1625[0:0] == 1'b1) ? 17'd0 : select_ln612_fu_738_p3);

assign xor_ln1002_1_fu_1282_p2 = (tmp_15_fu_1274_p3 ^ 1'd1);

assign xor_ln1002_fu_1196_p2 = (tmp_11_fu_1189_p3 ^ 1'd1);

assign xor_ln580_1_fu_602_p2 = (icmp_ln580_1_reg_1647 ^ 1'd1);

assign xor_ln580_fu_428_p2 = (icmp_ln580_reg_1625 ^ 1'd1);

assign xor_ln590_1_fu_664_p2 = (or_ln590_1_fu_658_p2 ^ 1'd1);

assign xor_ln590_fu_490_p2 = (or_ln590_fu_484_p2 ^ 1'd1);

assign xor_ln591_1_fu_626_p2 = (or_ln591_1_fu_621_p2 ^ 1'd1);

assign xor_ln591_fu_452_p2 = (or_ln591_fu_447_p2 ^ 1'd1);

assign xor_ln594_1_fu_638_p2 = (icmp_ln594_1_fu_571_p2 ^ 1'd1);

assign xor_ln594_fu_464_p2 = (icmp_ln594_fu_397_p2 ^ 1'd1);

assign y_i_V_10_fu_904_p2 = (r_2_fu_880_p2 + ap_sig_allocacmp_y_i_V_2_load);

assign y_i_V_11_fu_918_p3 = ((icmp_ln1547_fu_860_p2[0:0] == 1'b1) ? y_i_V_9_fu_892_p2 : y_i_V_10_fu_904_p2);

assign y_i_V_7_fu_786_p2 = (17'd0 - y_i_V_fu_765_p3);

assign y_i_V_8_fu_808_p3 = ((tmp_7_fu_772_p3[0:0] == 1'b1) ? y_i_V_7_fu_786_p2 : y_i_V_fu_765_p3);

assign y_i_V_9_fu_892_p2 = (ap_sig_allocacmp_y_i_V_2_load - r_2_fu_880_p2);

assign y_i_V_fu_765_p3 = ((icmp_ln580_1_reg_1647[0:0] == 1'b1) ? 17'd0 : select_ln612_1_fu_759_p3);

assign zext_ln1000_1_fu_1253_p1 = sub_ln1000_1_fu_1248_p2;

assign zext_ln1000_fu_1153_p1 = sub_ln1000_fu_1148_p2;

assign zext_ln1002_fu_1163_p1 = lsb_index_reg_1810;

assign zext_ln1004_1_fu_1457_p1 = m_9_reg_1897;

assign zext_ln1004_fu_1359_p1 = m_fu_1352_p3;

assign zext_ln1007_fu_1343_p1 = add_ln1007_fu_1338_p2;

assign zext_ln1008_fu_1329_p1 = sub_ln1008_fu_1324_p2;

assign zext_ln1010_fu_1390_p1 = tmp_V_5_reg_1848;

assign zext_ln1011_fu_1398_p1 = add_ln1011_fu_1393_p2;

assign zext_ln1012_fu_1413_p1 = sub_ln1012_fu_1408_p2;

assign zext_ln1014_1_fu_1430_p1 = tobool34_i_i663_reg_1892;

assign zext_ln1014_fu_1363_p1 = select_ln1007_reg_1882;

assign zext_ln1015_fu_1509_p1 = m_8_reg_1907;

assign zext_ln1386_fu_870_p1 = sh_fu_866_p1;

assign zext_ln1452_fu_931_p1 = angles_V_q0;

assign zext_ln494_1_fu_502_p1 = exp_tmp_1_reg_1637;

assign zext_ln494_fu_328_p1 = exp_tmp_reg_1615;

assign zext_ln578_1_fu_512_p1 = p_Result_20_fu_505_p3;

assign zext_ln578_fu_338_p1 = p_Result_18_fu_331_p3;

assign zext_ln595_1_fu_706_p1 = $unsigned(sext_ln590_1_fu_703_p1);

assign zext_ln595_fu_679_p1 = $unsigned(sext_ln590_fu_676_p1);

endmodule //cordiccart2pol
