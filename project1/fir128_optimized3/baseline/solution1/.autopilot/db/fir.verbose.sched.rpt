

================================================================
== Vitis HLS Report for 'fir'
================================================================
* Date:           Sun Oct  3 23:27:16 2021

* Version:        2021.1.1 (Build 3286242 on Wed Jul 28 13:09:46 MDT 2021)
* Project:        baseline
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.206 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      260|      260|  2.600 us|  2.600 us|  261|  261|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_23_1  |      258|      258|         5|          2|          1|   128|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 2, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.78>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%acc = alloca i32 1"   --->   Operation 8 'alloca' 'acc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 9 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 10 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %y"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %y, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %x"   --->   Operation 13 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %x, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%x_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %x" [fir.cpp:15]   --->   Operation 15 'read' 'x_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns) (grouped into LUT with out node mul9)   --->   "%empty = shl i32 %x_read, i32 3" [fir.cpp:15]   --->   Operation 16 'shl' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into LUT with out node mul9)   --->   "%empty_10 = shl i32 %x_read, i32 1" [fir.cpp:15]   --->   Operation 17 'shl' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (2.55ns) (out node of the LUT)   --->   "%mul9 = add i32 %empty, i32 %empty_10" [fir.cpp:15]   --->   Operation 18 'add' 'mul9' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (1.58ns)   --->   "%store_ln23 = store i8 127, i8 %i" [fir.cpp:23]   --->   Operation 19 'store' 'store_ln23' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 20 [1/1] (1.58ns)   --->   "%store_ln23 = store i32 0, i32 %acc" [fir.cpp:23]   --->   Operation 20 'store' 'store_ln23' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln23 = br void" [fir.cpp:23]   --->   Operation 21 'br' 'br_ln23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%i_1 = load i8 %i" [fir.cpp:26]   --->   Operation 22 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %i_1, i32 7" [fir.cpp:23]   --->   Operation 23 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%empty_11 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 128, i64 128, i64 128"   --->   Operation 24 'speclooptripcount' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln23 = br i1 %tmp, void %.split, void" [fir.cpp:23]   --->   Operation 25 'br' 'br_ln23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln23 = zext i8 %i_1" [fir.cpp:23]   --->   Operation 26 'zext' 'zext_ln23' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln23 = trunc i8 %i_1" [fir.cpp:23]   --->   Operation 27 'trunc' 'trunc_ln23' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specpipeline_ln21 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_0" [fir.cpp:21]   --->   Operation 28 'specpipeline' 'specpipeline_ln21' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specloopname_ln21 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [fir.cpp:21]   --->   Operation 29 'specloopname' 'specloopname_ln21' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.55ns)   --->   "%icmp_ln25 = icmp_eq  i8 %i_1, i8 0" [fir.cpp:25]   --->   Operation 30 'icmp' 'icmp_ln25' <Predicate = (!tmp)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln25 = br i1 %icmp_ln25, void %_ifconv, void" [fir.cpp:25]   --->   Operation 31 'br' 'br_ln25' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (1.87ns)   --->   "%add_ln26 = add i7 %trunc_ln23, i7 127" [fir.cpp:26]   --->   Operation 32 'add' 'add_ln26' <Predicate = (!tmp & !icmp_ln25)> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%trunc_ln26 = trunc i8 %i_1" [fir.cpp:26]   --->   Operation 33 'trunc' 'trunc_ln26' <Predicate = (!tmp & !icmp_ln25)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i6 @_ssdm_op_PartSelect.i6.i7.i32.i32, i7 %add_ln26, i32 1, i32 6" [fir.cpp:26]   --->   Operation 34 'partselect' 'lshr_ln' <Predicate = (!tmp & !icmp_ln25)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln26 = zext i6 %lshr_ln" [fir.cpp:26]   --->   Operation 35 'zext' 'zext_ln26' <Predicate = (!tmp & !icmp_ln25)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%shift_reg_1_addr = getelementptr i32 %shift_reg_1, i64 0, i64 %zext_ln26" [fir.cpp:26]   --->   Operation 36 'getelementptr' 'shift_reg_1_addr' <Predicate = (!tmp & !icmp_ln25)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%shift_reg_0_addr = getelementptr i32 %shift_reg_0, i64 0, i64 %zext_ln26" [fir.cpp:26]   --->   Operation 37 'getelementptr' 'shift_reg_0_addr' <Predicate = (!tmp & !icmp_ln25)> <Delay = 0.00>
ST_1 : Operation 38 [2/2] (3.25ns)   --->   "%shift_reg_0_load = load i6 %shift_reg_0_addr" [fir.cpp:26]   --->   Operation 38 'load' 'shift_reg_0_load' <Predicate = (!tmp & !icmp_ln25)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_1 : Operation 39 [2/2] (3.25ns)   --->   "%shift_reg_1_load = load i6 %shift_reg_1_addr" [fir.cpp:26]   --->   Operation 39 'load' 'shift_reg_1_load' <Predicate = (!tmp & !icmp_ln25)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%lshr_ln26_1 = partselect i6 @_ssdm_op_PartSelect.i6.i8.i32.i32, i8 %i_1, i32 1, i32 6" [fir.cpp:26]   --->   Operation 40 'partselect' 'lshr_ln26_1' <Predicate = (!tmp & !icmp_ln25)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln26 = br i1 %trunc_ln26, void %branch0, void %branch1" [fir.cpp:26]   --->   Operation 41 'br' 'br_ln26' <Predicate = (!tmp & !icmp_ln25)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%fir_int_int_c_addr = getelementptr i32 %fir_int_int_c, i64 0, i64 %zext_ln23" [fir.cpp:27]   --->   Operation 42 'getelementptr' 'fir_int_int_c_addr' <Predicate = (!tmp & !icmp_ln25)> <Delay = 0.00>
ST_1 : Operation 43 [2/2] (3.25ns)   --->   "%fir_int_int_c_load = load i7 %fir_int_int_c_addr" [fir.cpp:27]   --->   Operation 43 'load' 'fir_int_int_c_load' <Predicate = (!tmp & !icmp_ln25)> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 128> <ROM>
ST_1 : Operation 44 [1/1] (3.25ns)   --->   "%store_ln30 = store i32 %x_read, i32 0" [fir.cpp:30]   --->   Operation 44 'store' 'store_ln30' <Predicate = (!tmp & icmp_ln25)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_1 : Operation 45 [1/1] (1.58ns)   --->   "%br_ln0 = br void"   --->   Operation 45 'br' 'br_ln0' <Predicate = (!tmp & icmp_ln25)> <Delay = 1.58>
ST_1 : Operation 46 [1/1] (1.91ns)   --->   "%add_ln23 = add i8 %i_1, i8 255" [fir.cpp:23]   --->   Operation 46 'add' 'add_ln23' <Predicate = (!tmp)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (1.58ns)   --->   "%store_ln23 = store i8 %add_ln23, i8 %i" [fir.cpp:23]   --->   Operation 47 'store' 'store_ln23' <Predicate = (!tmp)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 7.20>
ST_2 : Operation 48 [1/2] (3.25ns)   --->   "%shift_reg_0_load = load i6 %shift_reg_0_addr" [fir.cpp:26]   --->   Operation 48 'load' 'shift_reg_0_load' <Predicate = (!tmp & !icmp_ln25)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 49 [1/2] (3.25ns)   --->   "%shift_reg_1_load = load i6 %shift_reg_1_addr" [fir.cpp:26]   --->   Operation 49 'load' 'shift_reg_1_load' <Predicate = (!tmp & !icmp_ln25)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 50 [1/1] (0.69ns)   --->   "%select_ln26 = select i1 %trunc_ln26, i32 %shift_reg_0_load, i32 %shift_reg_1_load" [fir.cpp:26]   --->   Operation 50 'select' 'select_ln26' <Predicate = (!tmp & !icmp_ln25)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln26_1 = zext i6 %lshr_ln26_1" [fir.cpp:26]   --->   Operation 51 'zext' 'zext_ln26_1' <Predicate = (!tmp & !icmp_ln25)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%shift_reg_0_addr_1 = getelementptr i32 %shift_reg_0, i64 0, i64 %zext_ln26_1" [fir.cpp:26]   --->   Operation 52 'getelementptr' 'shift_reg_0_addr_1' <Predicate = (!tmp & !icmp_ln25)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%shift_reg_1_addr_1 = getelementptr i32 %shift_reg_1, i64 0, i64 %zext_ln26_1" [fir.cpp:26]   --->   Operation 53 'getelementptr' 'shift_reg_1_addr_1' <Predicate = (!tmp & !icmp_ln25)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (3.25ns)   --->   "%store_ln26 = store i32 %select_ln26, i6 %shift_reg_0_addr_1" [fir.cpp:26]   --->   Operation 54 'store' 'store_ln26' <Predicate = (!tmp & !icmp_ln25 & !trunc_ln26)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln26 = br void" [fir.cpp:26]   --->   Operation 55 'br' 'br_ln26' <Predicate = (!tmp & !icmp_ln25 & !trunc_ln26)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (3.25ns)   --->   "%store_ln26 = store i32 %select_ln26, i6 %shift_reg_1_addr_1" [fir.cpp:26]   --->   Operation 56 'store' 'store_ln26' <Predicate = (!tmp & !icmp_ln25 & trunc_ln26)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%br_ln26 = br void" [fir.cpp:26]   --->   Operation 57 'br' 'br_ln26' <Predicate = (!tmp & !icmp_ln25 & trunc_ln26)> <Delay = 0.00>
ST_2 : Operation 58 [1/2] (3.25ns)   --->   "%fir_int_int_c_load = load i7 %fir_int_int_c_addr" [fir.cpp:27]   --->   Operation 58 'load' 'fir_int_int_c_load' <Predicate = (!tmp & !icmp_ln25)> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 128> <ROM>

State 3 <SV = 2> <Delay = 6.91>
ST_3 : Operation 59 [2/2] (6.91ns)   --->   "%mul_ln27 = mul i32 %fir_int_int_c_load, i32 %select_ln26" [fir.cpp:27]   --->   Operation 59 'mul' 'mul_ln27' <Predicate = (!tmp & !icmp_ln25)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%acc_load_1 = load i32 %acc" [fir.cpp:35]   --->   Operation 67 'load' 'acc_load_1' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%write_ln35 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %y, i32 %acc_load_1" [fir.cpp:35]   --->   Operation 68 'write' 'write_ln35' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%ret_ln36 = ret" [fir.cpp:36]   --->   Operation 69 'ret' 'ret_ln36' <Predicate = (tmp)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 6.91>
ST_4 : Operation 60 [1/2] (6.91ns)   --->   "%mul_ln27 = mul i32 %fir_int_int_c_load, i32 %select_ln26" [fir.cpp:27]   --->   Operation 60 'mul' 'mul_ln27' <Predicate = (!tmp & !icmp_ln25)> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 5.72>
ST_5 : Operation 61 [1/1] (1.58ns)   --->   "%br_ln28 = br void" [fir.cpp:28]   --->   Operation 61 'br' 'br_ln28' <Predicate = (!tmp & !icmp_ln25)> <Delay = 1.58>
ST_5 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node acc_1)   --->   "%mul_pn = phi i32 %mul_ln27, void, i32 %mul9, void" [fir.cpp:27]   --->   Operation 62 'phi' 'mul_pn' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%acc_load = load i32 %acc" [fir.cpp:21]   --->   Operation 63 'load' 'acc_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (2.55ns) (out node of the LUT)   --->   "%acc_1 = add i32 %mul_pn, i32 %acc_load" [fir.cpp:21]   --->   Operation 64 'add' 'acc_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (1.58ns)   --->   "%store_ln21 = store i32 %acc_1, i32 %acc" [fir.cpp:21]   --->   Operation 65 'store' 'store_ln21' <Predicate = true> <Delay = 1.58>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 66 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.78ns
The critical path consists of the following:
	'alloca' operation ('i') [7]  (0 ns)
	'load' operation ('i', fir.cpp:26) on local variable 'i' [21]  (0 ns)
	'add' operation ('add_ln26', fir.cpp:26) [33]  (1.87 ns)
	'getelementptr' operation ('shift_reg_0_addr', fir.cpp:26) [38]  (0 ns)
	'load' operation ('shift_reg_0_load', fir.cpp:26) on array 'shift_reg_0' [39]  (3.25 ns)
	blocking operation 0.659 ns on control path)

 <State 2>: 7.21ns
The critical path consists of the following:
	'load' operation ('shift_reg_0_load', fir.cpp:26) on array 'shift_reg_0' [39]  (3.25 ns)
	'select' operation ('select_ln26', fir.cpp:26) [41]  (0.698 ns)
	'store' operation ('store_ln26', fir.cpp:26) of variable 'select_ln26', fir.cpp:26 on array 'shift_reg_1' [51]  (3.25 ns)

 <State 3>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln27', fir.cpp:27) [56]  (6.91 ns)

 <State 4>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln27', fir.cpp:27) [56]  (6.91 ns)

 <State 5>: 5.73ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('mul_pn', fir.cpp:27) with incoming values : ('mul9', fir.cpp:15) ('mul_ln27', fir.cpp:27) [62]  (1.59 ns)
	'phi' operation ('mul_pn', fir.cpp:27) with incoming values : ('mul9', fir.cpp:15) ('mul_ln27', fir.cpp:27) [62]  (0 ns)
	'add' operation ('acc', fir.cpp:21) [64]  (2.55 ns)
	'store' operation ('store_ln21', fir.cpp:21) of variable 'acc', fir.cpp:21 on local variable 'acc' [67]  (1.59 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
