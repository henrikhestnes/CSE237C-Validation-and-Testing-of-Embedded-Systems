

================================================================
== Vitis HLS Report for 'fir_Pipeline_VITIS_LOOP_27_1'
================================================================
* Date:           Mon Oct  4 14:20:45 2021

* Version:        2021.1.1 (Build 3286242 on Wed Jul 28 13:09:46 MDT 2021)
* Project:        baseline
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.912 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      132|      132|  1.320 us|  1.320 us|  132|  132|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_27_1  |      130|      130|         5|          1|          1|   127|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.12>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%acc = alloca i32 1"   --->   Operation 8 'alloca' 'acc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 9 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i32 %shift_reg, i64 666, i64 22, i64 18446744073709551615"   --->   Operation 10 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i5 %c, i64 666, i64 215, i64 18446744073709551615"   --->   Operation 11 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.58ns)   --->   "%store_ln0 = store i7 127, i7 %i"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 13 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 0, i32 %acc"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 14 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%i_1 = load i7 %i" [fir.cpp:27]   --->   Operation 15 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.48ns)   --->   "%icmp_ln27 = icmp_eq  i7 %i_1, i7 0" [fir.cpp:27]   --->   Operation 16 'icmp' 'icmp_ln27' <Predicate = true> <Delay = 1.48> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 127, i64 127, i64 127"   --->   Operation 17 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln27 = br i1 %icmp_ln27, void %.split, void %.exitStub" [fir.cpp:27]   --->   Operation 18 'br' 'br_ln27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln27 = zext i7 %i_1" [fir.cpp:27]   --->   Operation 19 'zext' 'zext_ln27' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.87ns)   --->   "%add_ln27 = add i7 %i_1, i7 127" [fir.cpp:27]   --->   Operation 20 'add' 'add_ln27' <Predicate = (!icmp_ln27)> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln29 = zext i7 %add_ln27" [fir.cpp:29]   --->   Operation 21 'zext' 'zext_ln29' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%shift_reg_addr = getelementptr i32 %shift_reg, i64 0, i64 %zext_ln29" [fir.cpp:29]   --->   Operation 22 'getelementptr' 'shift_reg_addr' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_1 : Operation 23 [2/2] (3.25ns)   --->   "%shift_reg_load = load i7 %shift_reg_addr" [fir.cpp:29]   --->   Operation 23 'load' 'shift_reg_load' <Predicate = (!icmp_ln27)> <Delay = 3.25> <CoreInst = "RAM_2P_BRAM">   --->   Core 91 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 128> <RAM>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%c_addr = getelementptr i5 %c, i64 0, i64 %zext_ln27" [fir.cpp:30]   --->   Operation 24 'getelementptr' 'c_addr' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_1 : Operation 25 [2/2] (3.25ns)   --->   "%c_load = load i7 %c_addr" [fir.cpp:30]   --->   Operation 25 'load' 'c_load' <Predicate = (!icmp_ln27)> <Delay = 3.25> <CoreInst = "ROM_nP_BRAM">   --->   Core 103 'ROM_nP_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 5> <Depth = 128> <ROM>
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%store_ln27 = store i7 %add_ln27, i7 %i" [fir.cpp:27]   --->   Operation 26 'store' 'store_ln27' <Predicate = (!icmp_ln27)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 6.50>
ST_2 : Operation 27 [1/2] (3.25ns)   --->   "%shift_reg_load = load i7 %shift_reg_addr" [fir.cpp:29]   --->   Operation 27 'load' 'shift_reg_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM_2P_BRAM">   --->   Core 91 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 128> <RAM>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%shift_reg_addr_1 = getelementptr i32 %shift_reg, i64 0, i64 %zext_ln27" [fir.cpp:29]   --->   Operation 28 'getelementptr' 'shift_reg_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (3.25ns)   --->   "%store_ln29 = store i32 %shift_reg_load, i7 %shift_reg_addr_1" [fir.cpp:29]   --->   Operation 29 'store' 'store_ln29' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM_2P_BRAM">   --->   Core 91 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 128> <RAM>
ST_2 : Operation 30 [1/2] (3.25ns)   --->   "%c_load = load i7 %c_addr" [fir.cpp:30]   --->   Operation 30 'load' 'c_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM_nP_BRAM">   --->   Core 103 'ROM_nP_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 5> <Depth = 128> <ROM>

State 3 <SV = 2> <Delay = 6.91>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%sext_ln30 = sext i5 %c_load" [fir.cpp:30]   --->   Operation 31 'sext' 'sext_ln30' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [2/2] (6.91ns)   --->   "%mul_ln30 = mul i32 %sext_ln30, i32 %shift_reg_load" [fir.cpp:30]   --->   Operation 32 'mul' 'mul_ln30' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.91>
ST_4 : Operation 33 [1/2] (6.91ns)   --->   "%mul_ln30 = mul i32 %sext_ln30, i32 %shift_reg_load" [fir.cpp:30]   --->   Operation 33 'mul' 'mul_ln30' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%acc_load_1 = load i32 %acc"   --->   Operation 40 'load' 'acc_load_1' <Predicate = (icmp_ln27)> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %acc_out, i32 %acc_load_1"   --->   Operation 41 'write' 'write_ln0' <Predicate = (icmp_ln27)> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 42 'ret' 'ret_ln0' <Predicate = (icmp_ln27)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 4.14>
ST_5 : Operation 34 [1/1] (0.00ns)   --->   "%acc_load = load i32 %acc" [fir.cpp:30]   --->   Operation 34 'load' 'acc_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 35 [1/1] (0.00ns)   --->   "%specpipeline_ln25 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_0" [fir.cpp:25]   --->   Operation 35 'specpipeline' 'specpipeline_ln25' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "%specloopname_ln25 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [fir.cpp:25]   --->   Operation 36 'specloopname' 'specloopname_ln25' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (2.55ns)   --->   "%acc_1 = add i32 %mul_ln30, i32 %acc_load" [fir.cpp:30]   --->   Operation 37 'add' 'acc_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 38 [1/1] (1.58ns)   --->   "%store_ln30 = store i32 %acc_1, i32 %acc" [fir.cpp:30]   --->   Operation 38 'store' 'store_ln30' <Predicate = true> <Delay = 1.58>
ST_5 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 39 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.12ns
The critical path consists of the following:
	'alloca' operation ('i') [5]  (0 ns)
	'load' operation ('i', fir.cpp:27) on local variable 'i' [12]  (0 ns)
	'add' operation ('add_ln27', fir.cpp:27) [21]  (1.87 ns)
	'getelementptr' operation ('shift_reg_addr', fir.cpp:29) [23]  (0 ns)
	'load' operation ('shift_reg_load', fir.cpp:29) on array 'shift_reg' [24]  (3.25 ns)

 <State 2>: 6.51ns
The critical path consists of the following:
	'load' operation ('shift_reg_load', fir.cpp:29) on array 'shift_reg' [24]  (3.25 ns)
	'store' operation ('store_ln29', fir.cpp:29) of variable 'shift_reg_load', fir.cpp:29 on array 'shift_reg' [26]  (3.25 ns)

 <State 3>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln30', fir.cpp:30) [30]  (6.91 ns)

 <State 4>: 6.91ns
The critical path consists of the following:
	'mul' operation ('mul_ln30', fir.cpp:30) [30]  (6.91 ns)

 <State 5>: 4.14ns
The critical path consists of the following:
	'load' operation ('acc_load', fir.cpp:30) on local variable 'acc' [17]  (0 ns)
	'add' operation ('acc', fir.cpp:30) [31]  (2.55 ns)
	'store' operation ('store_ln30', fir.cpp:30) of variable 'acc', fir.cpp:30 on local variable 'acc' [33]  (1.59 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
